<?php
// Mostrar todos los errores
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üîç Test de Conexi√≥n MongoDB</h1>";

// 1. Verificar extensi√≥n MongoDB
echo "<h2>1. Informaci√≥n de PHP y MongoDB</h2>";
echo "PHP Version: " . PHP_VERSION . "<br>";

if (extension_loaded('mongodb')) {
    echo "‚úÖ Extensi√≥n MongoDB: CARGADA<br>";
    echo "Versi√≥n extensi√≥n: " . phpversion('mongodb') . "<br>";
} else {
    echo "‚ùå Extensi√≥n MongoDB: NO ENCONTRADA<br>";
}

// 2. Verificar autoload
echo "<h2>2. Verificar Composer</h2>";
$autoloadPath = __DIR__ . '/vendor/autoload.php';
if (file_exists($autoloadPath)) {
    echo "‚úÖ Autoload encontrado<br>";
    require_once $autoloadPath;
    echo "‚úÖ Autoload cargado<br>";
} else {
    echo "‚ùå Autoload NO encontrado en: $autoloadPath<br>";
    die("No se puede continuar sin composer autoload");
}

// 3. Test de conexi√≥n Railway
echo "<h2>3. Test Conexi√≥n Railway MongoDB</h2>";
try {
    $connectionString = "mongodb://mongo:eyQlSOAqnvZXIlwliWbUlZDROyDEhpEw@hopper.proxy.rlwy.net:25700";
    echo "Connection String: " . substr($connectionString, 0, 30) . "...<br>";
    
    $client = new MongoDB\Client($connectionString);
    echo "‚úÖ Cliente MongoDB creado<br>";
    
    // Test ping
    $admin = $client->selectDatabase('admin');
    $result = $admin->command(['ping' => 1]);
    echo "‚úÖ PING exitoso<br>";
    
    echo "<h3>üéâ CONEXI√ìN EXITOSA A RAILWAY MONGODB</h3>";
    
} catch (Exception $e) {
    echo "‚ùå ERROR DE CONEXI√ìN:<br>";
    echo "Mensaje: " . $e->getMessage() . "<br>";
}

echo "<h2>4. Informaci√≥n del Servidor</h2>";
echo "Versi√≥n MongoDB Extension: " . (extension_loaded('mongodb') ? phpversion('mongodb') : 'No instalada') . "<br>";
?>